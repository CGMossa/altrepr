// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// alt_class
RawVector alt_class(RObject x);
RcppExport SEXP _altrepr_alt_class(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< RObject >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(alt_class(x));
    return rcpp_result_gen;
END_RCPP
}
// alt_classname
CharacterVector alt_classname(RObject x);
RcppExport SEXP _altrepr_alt_classname(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< RObject >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(alt_classname(x));
    return rcpp_result_gen;
END_RCPP
}
// alt_pkgname
CharacterVector alt_pkgname(RObject x);
RcppExport SEXP _altrepr_alt_pkgname(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< RObject >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(alt_pkgname(x));
    return rcpp_result_gen;
END_RCPP
}
// alt_type
CharacterVector alt_type(RObject x);
RcppExport SEXP _altrepr_alt_type(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< RObject >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(alt_type(x));
    return rcpp_result_gen;
END_RCPP
}
// is_altrep
LogicalVector is_altrep(RObject x);
RcppExport SEXP _altrepr_is_altrep(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< RObject >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(is_altrep(x));
    return rcpp_result_gen;
END_RCPP
}
// alt_data1
RObject alt_data1(RObject x);
RcppExport SEXP _altrepr_alt_data1(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< RObject >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(alt_data1(x));
    return rcpp_result_gen;
END_RCPP
}
// alt_data2
RObject alt_data2(RObject x);
RcppExport SEXP _altrepr_alt_data2(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< RObject >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(alt_data2(x));
    return rcpp_result_gen;
END_RCPP
}
// set_alt_data1
RObject set_alt_data1(RObject x, RObject value);
RcppExport SEXP _altrepr_set_alt_data1(SEXP xSEXP, SEXP valueSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< RObject >::type x(xSEXP);
    Rcpp::traits::input_parameter< RObject >::type value(valueSEXP);
    rcpp_result_gen = Rcpp::wrap(set_alt_data1(x, value));
    return rcpp_result_gen;
END_RCPP
}
// set_alt_data2
RObject set_alt_data2(RObject x, RObject value);
RcppExport SEXP _altrepr_set_alt_data2(SEXP xSEXP, SEXP valueSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< RObject >::type x(xSEXP);
    Rcpp::traits::input_parameter< RObject >::type value(valueSEXP);
    rcpp_result_gen = Rcpp::wrap(set_alt_data2(x, value));
    return rcpp_result_gen;
END_RCPP
}
// alt_touch_dataptr
RObject alt_touch_dataptr(RObject x);
RcppExport SEXP _altrepr_alt_touch_dataptr(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< RObject >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(alt_touch_dataptr(x));
    return rcpp_result_gen;
END_RCPP
}
// is_compact_vec
LogicalVector is_compact_vec(RObject x);
RcppExport SEXP _altrepr_is_compact_vec(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< RObject >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(is_compact_vec(x));
    return rcpp_result_gen;
END_RCPP
}
// compact_expand
RObject compact_expand(RObject x);
RcppExport SEXP _altrepr_compact_expand(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< RObject >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(compact_expand(x));
    return rcpp_result_gen;
END_RCPP
}
// compact_is_expanded
LogicalVector compact_is_expanded(RObject x);
RcppExport SEXP _altrepr_compact_is_expanded(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< RObject >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(compact_is_expanded(x));
    return rcpp_result_gen;
END_RCPP
}
// compact_fields
IntegerVector compact_fields(RObject x);
RcppExport SEXP _altrepr_compact_fields(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< RObject >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(compact_fields(x));
    return rcpp_result_gen;
END_RCPP
}
// is_deferred_string
LogicalVector is_deferred_string(RObject x);
RcppExport SEXP _altrepr_is_deferred_string(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< RObject >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(is_deferred_string(x));
    return rcpp_result_gen;
END_RCPP
}
// deferred_is_expanded
LogicalVector deferred_is_expanded(RObject x);
RcppExport SEXP _altrepr_deferred_is_expanded(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< RObject >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(deferred_is_expanded(x));
    return rcpp_result_gen;
END_RCPP
}
// deferred_expand
RObject deferred_expand(RObject x);
RcppExport SEXP _altrepr_deferred_expand(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< RObject >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(deferred_expand(x));
    return rcpp_result_gen;
END_RCPP
}
// deferred_expand_elt
RObject deferred_expand_elt(RObject x, NumericVector i);
RcppExport SEXP _altrepr_deferred_expand_elt(SEXP xSEXP, SEXP iSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< RObject >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type i(iSEXP);
    rcpp_result_gen = Rcpp::wrap(deferred_expand_elt(x, i));
    return rcpp_result_gen;
END_RCPP
}
// mmap_details
List mmap_details(RObject x);
RcppExport SEXP _altrepr_mmap_details(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< RObject >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(mmap_details(x));
    return rcpp_result_gen;
END_RCPP
}
// wrapper_details
List wrapper_details(RObject x);
RcppExport SEXP _altrepr_wrapper_details(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< RObject >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(wrapper_details(x));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_altrepr_alt_class", (DL_FUNC) &_altrepr_alt_class, 1},
    {"_altrepr_alt_classname", (DL_FUNC) &_altrepr_alt_classname, 1},
    {"_altrepr_alt_pkgname", (DL_FUNC) &_altrepr_alt_pkgname, 1},
    {"_altrepr_alt_type", (DL_FUNC) &_altrepr_alt_type, 1},
    {"_altrepr_is_altrep", (DL_FUNC) &_altrepr_is_altrep, 1},
    {"_altrepr_alt_data1", (DL_FUNC) &_altrepr_alt_data1, 1},
    {"_altrepr_alt_data2", (DL_FUNC) &_altrepr_alt_data2, 1},
    {"_altrepr_set_alt_data1", (DL_FUNC) &_altrepr_set_alt_data1, 2},
    {"_altrepr_set_alt_data2", (DL_FUNC) &_altrepr_set_alt_data2, 2},
    {"_altrepr_alt_touch_dataptr", (DL_FUNC) &_altrepr_alt_touch_dataptr, 1},
    {"_altrepr_is_compact_vec", (DL_FUNC) &_altrepr_is_compact_vec, 1},
    {"_altrepr_compact_expand", (DL_FUNC) &_altrepr_compact_expand, 1},
    {"_altrepr_compact_is_expanded", (DL_FUNC) &_altrepr_compact_is_expanded, 1},
    {"_altrepr_compact_fields", (DL_FUNC) &_altrepr_compact_fields, 1},
    {"_altrepr_is_deferred_string", (DL_FUNC) &_altrepr_is_deferred_string, 1},
    {"_altrepr_deferred_is_expanded", (DL_FUNC) &_altrepr_deferred_is_expanded, 1},
    {"_altrepr_deferred_expand", (DL_FUNC) &_altrepr_deferred_expand, 1},
    {"_altrepr_deferred_expand_elt", (DL_FUNC) &_altrepr_deferred_expand_elt, 2},
    {"_altrepr_mmap_details", (DL_FUNC) &_altrepr_mmap_details, 1},
    {"_altrepr_wrapper_details", (DL_FUNC) &_altrepr_wrapper_details, 1},
    {NULL, NULL, 0}
};

RcppExport void R_init_altrepr(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
